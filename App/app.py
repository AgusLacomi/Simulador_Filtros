import streamlit as st
from pathlib import Path
from PIL import Image

# --- CONFIGURACI√ìN INICIAL ---
st.set_page_config(page_title="Filtros",
                   layout="wide",
                  page_icon="üî∑")

# Configurar el estado inicial
if 'button_states' not in st.session_state:
    st.session_state.button_states = [0, 0, 0]  # 0 para imagen A, 1 para imagen B

st.title("Selecciona una opci√≥n")

# Rutas de las im√°genes (ajusta estas rutas seg√∫n tus archivos)
image_paths = {
    'button1_a': 'images\RC1.jpg',
    'button1_b': 'images\RL1.jpg',
    'button2_a': 'images\RC2.jpg', 
    'button2_b': 'images\RL2.jpg',
    'button3_a': 'images\RLC1.jpg',
    'button3_b': 'images\RLC2.jpg'
}

# Ruta base de im√°genes
img_dir = Path(__file__).parent / "images"

# Configuraci√≥n de im√°genes locales y sus p√°ginas destino
opciones = [
    {"nombre": "Opci√≥n PARC", "archivo": "RC1.jpg", "pagina": "PasaAltos"},
    {"nombre": "Opci√≥n PBRC", "archivo": "RC2.jpg", "pagina": "PasaBajos"},
    {"nombre": "Opci√≥n 3", "archivo": "RLC1.jpg", "pagina": "PasaBanda"},
]
cols = st.columns(3, vertical_alignment= "center")

# Funci√≥n para alternar el estado de un bot√≥n
def toggle_image(button_index):
    st.session_state.button_states[button_index] = 1 - st.session_state.button_states[button_index]

# Bucle de botones
for idx, (col, opcion) in enumerate(zip(cols, opciones)):

    with col:
        if st.button("üîÑ Cambiar", key=f"toggle_{idx}", help = "Permite ver las diferentes distribuciones"):
            toggle_image(idx)
        
        # Determinar qu√© imagen mostrar
        current_state = st.session_state.button_states[idx]
        if current_state == 0:
            image_key = f'button{idx+1}_a'
            image_label = "Imagen A"
        else:
            image_key = f'button{idx+1}_b'
            image_label = "Imagen B"
        
        try:
            # Cargar la imagen
            image = Image.open(image_paths[image_key])
            # Mostrar la imagen
            st.image(image, use_container_width=True)
        except FileNotFoundError:
            st.error(f"No se encontr√≥ la imagen: {image_paths[image_key]}")
            st.info("Aseg√∫rate de que las im√°genes est√©n en el directorio correcto")
        # Bot√≥n de opci√≥n al fondo
        left_spacer, center_col, right_spacer = st.columns([1, 1, 1])
        with center_col:
            if st.button(
                label=f"Seleccionar {idx+1}",
                key=f"btn_{idx}"
            ):
                st.session_state.page_to_go = opcion["pagina"]

with st.expander("¬øQu√© hace este Simulador? ‚ùì"):
    st.markdown("""
    - Podr√°s simular filtros el√©ctricos pasivos de primer orden (Pasa-Bajo, Pasa-Alto y Pasa-Banda).
    
    Eleg√≠ multiples opciones para ver los comportamientos de los filtros y su respuesta en frecuencia.
    """)

with st.expander("Cr√©ditos"):
    st.markdown("""
    - **Autor**: Agust√≠n Lacomi
    - **Fecha de Entrega**: 29/07/2025
    - **Materia dictada por**: Pablo K√∂nig y Juan Carlos Mu√±oz
    """)

# Redirecci√≥n fuera del bucle de botones
if "page_to_go" in st.session_state:
    st.switch_page(f"pages/{st.session_state.page_to_go}.py")